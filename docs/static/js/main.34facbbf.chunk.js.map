{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA9BK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cACtB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKd,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAjBkB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEfC,EAFe,0FAE2EC,UAAUH,GAFrF,sBAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCYLO,EAVK,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEjC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCqBIO,EAxBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGjB,ECL0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACTxB,EAAQC,GACLwB,MAAK,SAAAX,GACJS,EAAS,CACPf,KAAMM,EACNO,SAAS,SAGd,CAACpB,IAEGqB,EDX2BI,CAAazB,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAItB,OACE,qCACI,oBAAIJ,UAAU,yCAAd,SAAyDhB,IAEvDoB,GAAW,mBAAGJ,UAAU,wCAAb,qBAEf,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAI,SAACiB,GAAD,OACT,cAAC,EAAD,eAAmCA,GAAhBA,EAAMf,aEYxBgB,EA5BM,WAEnB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAQA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEI2C,EAAWnB,KAAI,SAACT,EAAU6B,GAAX,OACb,cAAC,EAAD,CAA0B7B,SAAUA,GAArBA,Y,MCnB3B8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.34facbbf.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if( inputValue.trim().length > 2 ) {\r\n      setCategories( cats => [ inputValue, ...cats] );\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n      <form onSubmit={ handleSubmit }>\r\n        <input\r\n          type=\"text\"\r\n          value={ inputValue }\r\n          onChange={ handleInputChange }\r\n        />\r\n      </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async ( category ) => {\r\n  // I5u3qNkOo8ZeEihwtBZfbZAWnqMySHrM\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=I5u3qNkOo8ZeEihwtBZfbZAWnqMySHrM&q=${ encodeURI(category) }&limit=10`;\r\n  const resp = await fetch( url );\r\n  const { data } = await resp.json();\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ( { id, title, url } ) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={ url } alt={ title } />\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n        <h3 className='card animate__animated animate__fadeIn'>{ category }</h3>\r\n        \r\n        { loading && <p className='card animate__animated animate__flash'>Loading</p> }\r\n\r\n      <div className='card-grid'>\r\n          {\r\n            images.map((image) => (\r\n              <GifGridItem key={ image.id } { ...image } />\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n    getGifs(category)\r\n      .then(images => {\r\n        setState({\r\n          data: images,\r\n          loading: false\r\n        });\r\n      });\r\n  }, [category]);\r\n\r\n  return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  // const handleAdd = () => {\r\n  //   // setCategories( [...categories, 'HunterXHunder'] );\r\n  //   // setCategories( ['HunterXHunder', ...categories] );\r\n  //   setCategories( cats => [...cats, 'HunterXHunder'] );\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h1>GifExpertApp</h1>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr/>\r\n\r\n\r\n      <ol>\r\n        {\r\n          categories.map((category, i) => (\r\n            <GifGrid key={ category } category={category } />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}